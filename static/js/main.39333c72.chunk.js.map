{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","prevLinkDisabled","nextLinkDisabled","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","cellNumber","active","concat","matrix","App","_useState","useState","_useState2","_slicedToArray","setPerPage","_useState3","_useState4","setCurrentPage","begin","end","min","id","value","onChange","event","target","number","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAHC,GAKjC,IAJLC,EAAKD,EAALC,MACAC,EAAOF,EAAPE,QACAC,EAAWH,EAAXG,YACAC,EAAYJ,EAAZI,aAEMC,EAAaC,KAAKC,KAAMN,EAAQC,GAChCM,EAAQf,EAAW,EAAGY,GACtBI,EAAmC,IAAhBN,EACnBO,EAAmBP,IAAgBE,EAGzC,OACEM,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUP,IAAoBI,SAC7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeR,EACfS,QAAS,kBAAOT,GAAoBL,EAAaD,EAAc,IAAGU,SACnE,WAKFL,EAAMW,KAAI,SAAAC,GAAU,OACnBN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEM,OAAQlB,IAAgBiB,IAAcP,SAGnEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAK,OAAMF,GACVF,QAAS,kBAAMd,EAAagB,IAAYP,SAEvCO,KAREA,MAaTN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEC,SAAUN,IAAoBG,SAE3DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAOR,GAAoBN,EAAaD,EAAc,IAAGU,SACnE,eCvDHU,EAAmB,CAAC,EAAG,EAAG,GAAI,IAGvBC,EAAgB,WAC3B,IAAAC,EAA8BC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAlCvB,EAAOyB,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAsCJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAA1C3B,EAAW4B,EAAA,GAAEC,EAAcD,EAAA,GAO5BE,EAAS9B,EAAcD,EAAWA,EAClCgC,EAAM5B,KAAK6B,IAAIF,EAAQ/B,EAZX,IAclB,OACES,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAS,OACvBnB,EAAW,YAAAmB,OAAWW,EAAQ,EAAC,OAAAX,OAAMY,EAAG,QAAAZ,OAnBrC,GAmBuD,OAGrEX,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRsB,GAAG,kBACHxB,UAAU,eACVyB,MAAOnC,EACPoC,SAvBa,SAACC,GACtBV,GAAYU,EAAMC,OAAOH,OACzBL,EAAe,IAqBkBnB,SAExBU,EAAOJ,KAAI,SAAAsB,GAAM,OAChB3B,cAAA,UACEuB,MAAK,GAAAf,OAAKmB,GAAS5B,SAGlB4B,GAFIA,UAQb3B,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACf,EAAU,CACTE,MAhDY,GAiDZC,QAASA,EACTC,YAAaA,EACbC,aAAc4B,IAGhBlB,cAAA,MAAAD,SACGpB,EAAWwC,EAAQ,EAAGC,GAAKf,KAAI,SAAAwB,GAAI,OAClC7B,cAAA,MAAI,UAAQ,OAAMD,SAAA,QAAAS,OAAqBqB,IAAfA,YC7DlCC,IAASC,OAAO/B,cAACU,EAAG,IAAKsB,SAASC,eAAe,W","file":"static/js/main.39333c72.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil((total / perPage));\n  const pages = getNumbers(1, pagesCount);\n  const prevLinkDisabled = currentPage === 1;\n  const nextLinkDisabled = currentPage === pagesCount;\n  /* disabled */\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: prevLinkDisabled })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevLinkDisabled}\n          onClick={() => !prevLinkDisabled && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(cellNumber => (\n        <li\n          className={cn('page-item', { active: currentPage === cellNumber })}\n          key={cellNumber}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${cellNumber}`}\n            onClick={() => onPageChange(cellNumber)}\n          >\n            {cellNumber}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: nextLinkDisabled })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextLinkDisabled}\n          onClick={() => !nextLinkDisabled && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst matrix: number[] = [3, 5, 10, 20];\nconst totalAmount = 42;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const begin = (currentPage * perPage) - perPage;\n  const end = Math.min(begin + perPage, totalAmount);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${begin + 1} - ${end} of ${totalAmount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleOnChange}\n          >\n            {matrix.map(number => (\n              <option\n                value={`${number}`}\n                key={number}\n              >\n                {number}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalAmount}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {getNumbers(begin + 1, end).map(item => (\n          <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}